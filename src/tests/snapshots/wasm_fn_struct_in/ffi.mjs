// This file was generated by miniffi v0.1.0. Do not edit.

export async function instantiate(bytes, imports) {
    let env = Object.assign({}, imports, _ffi_imports);
    let promise = WebAssembly.instantiate(bytes, { env });
    _ffi_exports = (await promise).instance.exports;
    return { memory: _ffi_exports.memory };
}

export async function instantiateStreaming(source, imports) {
    let env = Object.assign({}, imports, _ffi_imports);
    let promise = WebAssembly.instantiateStreaming(source, { env });
    _ffi_exports = (await promise).instance.exports;
    return { memory: _ffi_exports.memory };
}

export function rust_mem_leaked() {
    return _ffi_exports._ffi_fn_rust_mem_leaked();
}

export function empty_tuple(x, foo, y) {
    return _ffi_exports._ffi_fn_empty_tuple(x, y);
}

export function single_element_tuple(x, y) {
    return _ffi_exports._ffi_fn_single_element_tuple(x[0], y[0]);
}

export function multiply_pairs(ab, cd) {
    return _ffi_exports._ffi_fn_multiply_pairs(ab.x, ab.y, cd.x, cd.y);
}

let _ffi_exports;

const _ffi_imports = {};
