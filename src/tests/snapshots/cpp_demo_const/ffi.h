// This file was generated by miniffi v0.1.0. Do not edit.

#pragma once

#include <stdint.h>
#include <string_view>

namespace rust {

float const CONST_F32_NEG_0 = -0.0f;
float const CONST_F32_PI = 3.1415927f;
double const CONST_F64_NEG_0 = -0.0;
double const CONST_F64_PI = -3.141592653589793;
bool const CONST_FALSE = false;
int16_t const CONST_I16_MAX = 32767;
int16_t const CONST_I16_MIN = -32768;
int32_t const CONST_I32_MAX = 2147483647;
int32_t const CONST_I32_MIN = -2147483647 - 1;
int64_t const CONST_I64_MAX = 9223372036854775807ll;
int64_t const CONST_I64_MIN = -9223372036854775807ll - 1;
int8_t const CONST_I8_MAX = 127;
int8_t const CONST_I8_MIN = -128;
std::string_view const CONST_STRING = std::string_view("\000\r\nðŸ¦€", 7);
bool const CONST_TRUE = true;
uint16_t const CONST_U16_MAX = 65535u;
uint16_t const CONST_U16_MIN = 0u;
uint32_t const CONST_U32_MAX = 4294967295u;
uint32_t const CONST_U32_MIN = 0u;
uint64_t const CONST_U64_MAX = 18446744073709551615ull;
uint64_t const CONST_U64_MIN = 0ull;
uint8_t const CONST_U8_MAX = 255u;
uint8_t const CONST_U8_MIN = 0u;

uintptr_t rust_mem_leaked();

} // namespace rust
