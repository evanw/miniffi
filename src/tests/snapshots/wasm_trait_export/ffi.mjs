// This file was generated by miniffi v0.1.0. Do not edit.

export async function instantiate(bytes, imports) {
    let env = Object.assign({}, imports, _ffi_imports);
    let promise = WebAssembly.instantiate(bytes, { env });
    _ffi_exports = (await promise).instance.exports;
    return { memory: _ffi_exports.memory };
}

export async function instantiateStreaming(source, imports) {
    let env = Object.assign({}, imports, _ffi_imports);
    let promise = WebAssembly.instantiateStreaming(source, { env });
    _ffi_exports = (await promise).instance.exports;
    return { memory: _ffi_exports.memory };
}

export function rust_mem_leaked() {
    return _ffi_exports._ffi_fn_rust_mem_leaked();
}

export function get_counter() {
    return _ffi_exports._ffi_fn_get_counter();
}

export function get_adder_rc(x) {
    let ret_ptr = _ffi_exports._ffi_fn_get_adder_rc(x);
    return new _ffi_Rc_Adder(ret_ptr);
}

export function get_adder_box(x) {
    let ret_ptr = _ffi_exports._ffi_fn_get_adder_box(x);
    return new _ffi_Box_Adder(ret_ptr);
}

let _ffi_reg_Box_Adder = new FinalizationRegistry((ptr) => _ffi_exports._ffi_rs_drop_Box_Adder(ptr));
let _ffi_reg_Rc_Adder = new FinalizationRegistry((ptr) => _ffi_exports._ffi_rs_drop_Rc_Adder(ptr));

const _ffi_Box_Adder = class Adder {
    constructor(_) {
        Object.defineProperty(this, "_", { value: _ });
        _ffi_reg_Box_Adder.register(this, _);
    }

    add(x) {
        return _ffi_exports._ffi_Box_Adder__add(this._, x);
    }
};

const _ffi_Rc_Adder = class Adder {
    constructor(_) {
        Object.defineProperty(this, "_", { value: _ });
        _ffi_reg_Rc_Adder.register(this, _);
    }

    add(x) {
        return _ffi_exports._ffi_Rc_Adder__add(this._, x);
    }
};

let _ffi_exports;

const _ffi_imports = {};
