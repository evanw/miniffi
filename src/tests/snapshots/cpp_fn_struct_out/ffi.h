// This file was generated by miniffi v0.1.0. Do not edit.

#pragma once

#include <stdint.h>

namespace rust {

struct EmptyStruct {
    bool operator == (const EmptyStruct&) const { return true; }
    bool operator != (const EmptyStruct& e) const { return !(*this == e); }
};

struct PairStruct {
    float x = 0.0f;
    float y = 0.0f;
    bool operator == (const PairStruct&) const;
    bool operator != (const PairStruct& p) const { return !(*this == p); }
};

struct SingleElementStruct {
    int32_t _0 = 0;
    bool operator == (const SingleElementStruct&) const;
    bool operator != (const SingleElementStruct& s) const { return !(*this == s); }
};

uintptr_t rust_mem_leaked();

EmptyStruct empty_struct();

SingleElementStruct single_element_struct(int32_t x);

PairStruct make_pair(float x, float y);

} // namespace rust
