// This file was generated by miniffi v0.1.0. Do not edit.

#pragma once

#include <memory>
#include <stdint.h>

namespace rust {

struct EmptyStruct {
};

struct PairStruct {
    float x = 0.0f;
    float y = 0.0f;
};

struct SingleElementStruct {
    int32_t _0 = 0;
};

struct StructIn {
    virtual ~StructIn() {}
    virtual int32_t empty_struct(int32_t x, EmptyStruct foo, int32_t y) = 0;
    virtual int32_t single_element_struct(SingleElementStruct x, SingleElementStruct y) = 0;
    virtual float multiply_pairs(PairStruct ab, PairStruct cd) = 0;
};

uintptr_t rust_mem_leaked();

int32_t set_empty_struct(std::shared_ptr<StructIn> struct_in);

int32_t set_single_element_struct(std::shared_ptr<StructIn> struct_in);

float set_multiply_pairs(std::shared_ptr<StructIn> struct_in);

} // namespace rust
