// This file was generated by miniffi v0.1.0. Do not edit.

#[allow(non_snake_case)]
fn _ffi_enum_Big_from_js(val: i32) -> Big {
    match val {
        -2147483648 => Big::Min,
        2147483647 => Big::Max,
        _ => panic!(),
    }
}

#[allow(non_snake_case)]
fn _ffi_enum_Foo_from_js(val: i32) -> Foo {
    match val {
        0 => Foo::Zero,
        1 => Foo::One,
        100 => Foo::Hundred,
        _ => panic!(),
    }
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_big_to_i32(big_raw: i32) -> i32 {
    big_to_i32(_ffi_enum_Big_from_js(big_raw))
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_foo_to_i32(foo_raw: i32) -> i32 {
    foo_to_i32(_ffi_enum_Foo_from_js(foo_raw))
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_rust_mem_leaked() -> usize {
    rust_mem_leaked()
}
