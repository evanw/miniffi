// This file was generated by miniffi v0.1.0. Do not edit.

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_add_bool(x: bool, y: bool) -> bool {
    add_bool(x, y)
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_add_f32(x: f32, y: f32) -> f32 {
    add_f32(x, y)
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_add_f64(x: f64, y: f64) -> f64 {
    add_f64(x, y)
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_add_i16(x: i16, y: i16) -> i16 {
    add_i16(x, y)
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_add_i32(x: i32, y: i32) -> i32 {
    add_i32(x, y)
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_add_i64(x: i64, y: i64) -> i64 {
    add_i64(x, y)
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_add_i8(x: i8, y: i8) -> i8 {
    add_i8(x, y)
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_add_isize(x: isize, y: isize) -> isize {
    add_isize(x, y)
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_add_u16(x: u16, y: u16) -> u16 {
    add_u16(x, y)
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_add_u32(x: u32, y: u32) -> u32 {
    add_u32(x, y)
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_add_u64(x: u64, y: u64) -> u64 {
    add_u64(x, y)
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_add_u8(x: u8, y: u8) -> u8 {
    add_u8(x, y)
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_add_usize(x: usize, y: usize) -> usize {
    add_usize(x, y)
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_rust_mem_leaked() -> usize {
    rust_mem_leaked()
}
