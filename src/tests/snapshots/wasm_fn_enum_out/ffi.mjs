// This file was generated by miniffi v0.1.0. Do not edit.

export async function instantiate(bytes, imports) {
    let env = Object.assign({}, imports, _ffi_imports);
    let promise = WebAssembly.instantiate(bytes, { env });
    _ffi_exports = (await promise).instance.exports;
    return { memory: _ffi_exports.memory };
}

export async function instantiateStreaming(source, imports) {
    let env = Object.assign({}, imports, _ffi_imports);
    let promise = WebAssembly.instantiateStreaming(source, { env });
    _ffi_exports = (await promise).instance.exports;
    return { memory: _ffi_exports.memory };
}

export const Foo = {
    Zero: 0,
    One: 1,
    Hundred: 100,
};

export const Big = {
    Min: -2147483648,
    Max: 2147483647,
};

export function rust_mem_leaked() {
    return _ffi_exports._ffi_fn_rust_mem_leaked();
}

export function i32_to_foo(foo) {
    return _ffi_exports._ffi_fn_i32_to_foo(foo);
}

export function i32_to_big(big) {
    return _ffi_exports._ffi_fn_i32_to_big(big);
}

let _ffi_exports;

const _ffi_imports = {};
