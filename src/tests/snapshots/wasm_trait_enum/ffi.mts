// This file was generated by miniffi v0.1.0. Do not edit.

export async function instantiate(bytes: BufferSource, imports?: WebAssembly.ModuleImports): Promise<{ memory: WebAssembly.Memory }> {
    let env = Object.assign({}, imports, _ffi_imports);
    let promise = WebAssembly.instantiate(bytes, { env });
    _ffi_exports = (await promise).instance.exports as any;
    return { memory: _ffi_exports.memory };
}

export async function instantiateStreaming(source: Response | PromiseLike<Response>, imports?: WebAssembly.ModuleImports): Promise<{ memory: WebAssembly.Memory }> {
    let env = Object.assign({}, imports, _ffi_imports);
    let promise = WebAssembly.instantiateStreaming(source, { env });
    _ffi_exports = (await promise).instance.exports as any;
    return { memory: _ffi_exports.memory };
}

export interface Foo {
    set_enum(bar: Bar): void;
    get_enum(): Bar;
}

export const enum Bar {
    A,
    B,
    C,
}

export function rust_mem_leaked(): number {
    return _ffi_exports._ffi_fn_rust_mem_leaked();
}

export function get_foo(): Foo {
    let ret_ptr = _ffi_exports._ffi_fn_get_foo();
    return new _ffi_Box_Foo(ret_ptr);
}

let _ffi_reg_Box_Foo = new FinalizationRegistry((ptr: number) => _ffi_exports._ffi_rs_drop_Box_Foo(ptr));

const _ffi_Box_Foo = class Foo implements Foo {
    declare readonly _: number;

    constructor(_: number) {
        Object.defineProperty(this, "_", { value: _ });
        _ffi_reg_Box_Foo.register(this, _);
    }

    set_enum(bar: Bar): void {
        _ffi_exports._ffi_Box_Foo__set_enum(this._, bar);
    }

    get_enum(): Bar {
        return _ffi_exports._ffi_Box_Foo__get_enum(this._);
    }
};

let _ffi_exports: {
    memory: WebAssembly.Memory,
    _ffi_Box_Foo__get_enum: (_self: number) => number,
    _ffi_Box_Foo__set_enum: (_self: number, bar_raw: number) => void,
    _ffi_fn_get_foo: () => number,
    _ffi_fn_rust_mem_leaked: () => number,
    _ffi_rs_drop_Box_Foo: (ptr: number) => void,
};

const _ffi_imports = {};
