// This file was generated by miniffi v0.1.0. Do not edit.

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_rust_mem_leaked() -> usize {
    rust_mem_leaked()
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_set_empty_struct(struct_in_ptr: *const u8) -> i32 {
    set_empty_struct(std::rc::Rc::new(_ffi_rs_StructIn(struct_in_ptr)))
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_set_multiply_pairs(struct_in_ptr: *const u8) -> f32 {
    set_multiply_pairs(std::rc::Rc::new(_ffi_rs_StructIn(struct_in_ptr)))
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_set_single_element_struct(struct_in_ptr: *const u8) -> i32 {
    set_single_element_struct(std::rc::Rc::new(_ffi_rs_StructIn(struct_in_ptr)))
}

#[allow(non_camel_case_types)]
struct _ffi_rs_StructIn(*const u8);

impl Drop for _ffi_rs_StructIn {
    fn drop(&mut self) {
        unsafe extern "C" { fn _ffi_swift_drop(_: *const u8); }
        unsafe { _ffi_swift_drop(self.0) };
    }
}

impl StructIn for _ffi_rs_StructIn {
    fn empty_struct(&self, x: i32, foo: EmptyStruct, y: i32) -> i32 {
        unsafe extern "C" { fn _ffi_swift_StructIn__empty_struct(_: *const u8, x: i32, y: i32) -> i32; }
        _ = foo;
        unsafe { _ffi_swift_StructIn__empty_struct(self.0, x, y) }
    }

    fn single_element_struct(&self, x: SingleElementStruct, y: SingleElementStruct) -> i32 {
        unsafe extern "C" { fn _ffi_swift_StructIn__single_element_struct(_: *const u8, x_0: i32, y_0: i32) -> i32; }
        unsafe { _ffi_swift_StructIn__single_element_struct(self.0, x.0, y.0) }
    }

    fn multiply_pairs(&self, ab: PairStruct, cd: PairStruct) -> f32 {
        unsafe extern "C" { fn _ffi_swift_StructIn__multiply_pairs(_: *const u8, ab_x: f32, ab_y: f32, cd_x: f32, cd_y: f32) -> f32; }
        unsafe { _ffi_swift_StructIn__multiply_pairs(self.0, ab.x, ab.y, cd.x, cd.y) }
    }
}
