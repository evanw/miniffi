// This file was generated by miniffi v0.1.0. Do not edit.

#pragma once

#include <stdint.h>

namespace rust {

uintptr_t rust_mem_leaked();

int32_t test_alignas(int32_t alignas2);

int32_t test_alignof(int32_t alignof2);

int32_t test_and(int32_t and2);

int32_t test_and_eq(int32_t and_eq2);

int32_t test_asm(int32_t asm2);

int32_t test_associatedtype(int32_t associatedtype);

int32_t test_associativity(int32_t associativity);

int32_t test_atomic_cancel(int32_t atomic_cancel2);

int32_t test_atomic_commit(int32_t atomic_commit2);

int32_t test_atomic_noexcept(int32_t atomic_noexcept2);

int32_t test_auto(int32_t auto2);

int32_t test_bitand(int32_t bitand2);

int32_t test_bitor(int32_t bitor2);

int32_t test_bool(int32_t bool2);

int32_t test_boolean(int32_t boolean);

int32_t test_borrowing(int32_t borrowing);

int32_t test_byte(int32_t byte);

int32_t test_case(int32_t case2);

int32_t test_catch(int32_t catch2);

int32_t test_char(int32_t char2);

int32_t test_char16_t(int32_t char16_t2);

int32_t test_char32_t(int32_t char32_t2);

int32_t test_char8_t(int32_t char8_t2);

int32_t test_class(int32_t class2);

int32_t test_co_await(int32_t co_await2);

int32_t test_co_return(int32_t co_return2);

int32_t test_co_yield(int32_t co_yield2);

int32_t test_compl(int32_t compl2);

int32_t test_concept(int32_t concept2);

int32_t test_const_cast(int32_t const_cast2);

int32_t test_consteval(int32_t consteval2);

int32_t test_constexpr(int32_t constexpr2);

int32_t test_constinit(int32_t constinit2);

int32_t test_consuming(int32_t consuming);

int32_t test_contract_assert(int32_t contract_assert2);

int32_t test_convenience(int32_t convenience);

int32_t test_debugger(int32_t debugger);

int32_t test_decltype(int32_t decltype2);

int32_t test_default(int32_t default2);

int32_t test_defer(int32_t defer);

int32_t test_deinit(int32_t deinit);

int32_t test_delete(int32_t delete2);

int32_t test_double(int32_t double2);

int32_t test_dynamic(int32_t dynamic);

int32_t test_dynamic_cast(int32_t dynamic_cast2);

int32_t test_explicit(int32_t explicit2);

int32_t test_export(int32_t export2);

int32_t test_extends(int32_t extends);

int32_t test_extension(int32_t extension);

int32_t test_fallthrough(int32_t fallthrough);

int32_t test_fileprivate(int32_t fileprivate);

int32_t test_finally(int32_t finally);

int32_t test_float(int32_t float2);

int32_t test_friend(int32_t friend2);

int32_t test_func(int32_t func);

int32_t test_function(int32_t function);

int32_t test_get(int32_t get);

int32_t test_goto(int32_t goto2);

int32_t test_guard(int32_t guard);

int32_t test_implements(int32_t implements);

int32_t test_import(int32_t import);

int32_t test_indirect(int32_t indirect);

int32_t test_infix(int32_t infix);

int32_t test_init(int32_t init);

int32_t test_inline(int32_t inline2);

int32_t test_inout(int32_t inout);

int32_t test_instanceof(int32_t instanceof);

int32_t test_int(int32_t int2);

int32_t test_interface(int32_t interface);

int32_t test_internal(int32_t internal);

int32_t test_is(int32_t is);

int32_t test_lazy(int32_t lazy);

int32_t test_left(int32_t left);

int32_t test_long(int32_t long2);

int32_t test_mutable(int32_t mutable2);

int32_t test_mutating(int32_t mutating);

int32_t test_namespace(int32_t namespace2);

int32_t test_native(int32_t native);

int32_t test_new(int32_t new2);

int32_t test_nil(int32_t nil);

int32_t test_noexcept(int32_t noexcept2);

int32_t test_none(int32_t none);

int32_t test_nonisolated(int32_t nonisolated);

int32_t test_nonmutating(int32_t nonmutating);

int32_t test_not(int32_t not2);

int32_t test_not_eq(int32_t not_eq2);

int32_t test_null(int32_t null);

int32_t test_nullptr(int32_t nullptr2);

int32_t test_open(int32_t open);

int32_t test_operator(int32_t operator2);

int32_t test_optional(int32_t optional);

int32_t test_or(int32_t or2);

int32_t test_or_eq(int32_t or_eq2);

int32_t test_package(int32_t package);

int32_t test_postfix(int32_t postfix);

int32_t test_precedence(int32_t precedence);

int32_t test_precedencegroup(int32_t precedencegroup);

int32_t test_prefix(int32_t prefix);

int32_t test_private(int32_t private2);

int32_t test_protected(int32_t protected2);

int32_t test_protocol(int32_t protocol);

int32_t test_public(int32_t public2);

int32_t test_reflexpr(int32_t reflexpr2);

int32_t test_register(int32_t register2);

int32_t test_reinterpret_cast(int32_t reinterpret_cast2);

int32_t test_repeat(int32_t repeat);

int32_t test_required(int32_t required);

int32_t test_requires(int32_t requires2);

int32_t test_rethrows(int32_t rethrows);

int32_t test_right(int32_t right);

int32_t test_set(int32_t set);

int32_t test_short(int32_t short2);

int32_t test_signed(int32_t signed2);

int32_t test_sizeof(int32_t sizeof2);

int32_t test_some(int32_t some);

int32_t test_static_assert(int32_t static_assert2);

int32_t test_static_cast(int32_t static_cast2);

int32_t test_subscript(int32_t subscript);

int32_t test_switch(int32_t switch2);

int32_t test_synchronized(int32_t synchronized2);

int32_t test_template(int32_t template2);

int32_t test_this(int32_t this2);

int32_t test_thread_local(int32_t thread_local2);

int32_t test_throw(int32_t throw2);

int32_t test_throws(int32_t throws);

int32_t test_transient(int32_t transient);

int32_t test_typealias(int32_t typealias);

int32_t test_typedef(int32_t typedef2);

int32_t test_typeid(int32_t typeid2);

int32_t test_typename(int32_t typename2);

int32_t test_undefined(int32_t undefined);

int32_t test_union(int32_t union2);

int32_t test_unowned(int32_t unowned);

int32_t test_unsigned(int32_t unsigned2);

int32_t test_using(int32_t using2);

int32_t test_var(int32_t var);

int32_t test_void(int32_t void2);

int32_t test_volatile(int32_t volatile2);

int32_t test_wchar_t(int32_t wchar_t2);

int32_t test_weak(int32_t weak);

int32_t test_with(int32_t with);

int32_t test_xor(int32_t xor2);

int32_t test_xor_eq(int32_t xor_eq2);

} // namespace rust
