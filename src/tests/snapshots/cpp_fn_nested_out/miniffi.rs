// This file was generated by miniffi v0.1.0. Do not edit.

#[unsafe(no_mangle)]
extern "C" fn _ffi_Rc_Bar__get(_self: *const u8) -> i32 {
    let _self = unsafe { &*(_self as *const std::rc::Rc<dyn Bar>) };
    _self.get()
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_drop_Rc_Bar(ptr: *const u8) {
    drop(unsafe { Box::from_raw(ptr as *mut std::rc::Rc<dyn Bar>) });
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_rust_mem_leaked() -> usize {
    rust_mem_leaked()
}

#[unsafe(no_mangle)]
extern "C" fn _ffi_fn_test(x: i32) -> _ffi_ret_i32_ptr {
    let ret = test(x);
    let ret_0 = ret.0;
    let ret_1 = ret.1;
    _ffi_ret_i32_ptr(ret_0, Box::into_raw(Box::new(ret_1.ptr)) as *const u8)
}

#[repr(C)]
struct _ffi_ret_i32_ptr(i32, *const u8);
