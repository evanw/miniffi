// This file was generated by miniffi v0.1.0. Do not edit.

protocol Adder: AnyObject {
    func add(_ x: Int32) -> Int32
}

func rust_mem_leaked() -> UInt {
    return _ffi_fn_rust_mem_leaked()
}

func get_counter() -> UInt32 {
    return _ffi_fn_get_counter()
}

func get_adder_rc(_ x: Int32) -> Adder {
    let ret_ptr = _ffi_fn_get_adder_rc(x)
    return _ffi_Rc_Adder(ret_ptr)
}

func get_adder_box(_ x: Int32) -> Adder {
    let ret_ptr = _ffi_fn_get_adder_box(x)
    return _ffi_Box_Adder(ret_ptr)
}

private class _ffi_Box_Adder : Adder {
    private var _ffi: UnsafeRawPointer?

    init(_ ptr: UnsafeRawPointer?) {
        _ffi = ptr
    }

    deinit {
        _ffi_rs_drop_Box_Adder(_ffi)
    }

    func add(_ x: Int32) -> Int32 {
        return _ffi_Box_Adder__add(_ffi, x)
    }
}

private class _ffi_Rc_Adder : Adder {
    private var _ffi: UnsafeRawPointer?

    init(_ ptr: UnsafeRawPointer?) {
        _ffi = ptr
    }

    deinit {
        _ffi_rs_drop_Rc_Adder(_ffi)
    }

    func add(_ x: Int32) -> Int32 {
        return _ffi_Rc_Adder__add(_ffi, x)
    }
}
